<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\..\..\packages\Taef.Native.10.55.200602001\build\native\Taef.Native.props" Condition="Exists('..\..\..\packages\Taef.Native.10.55.200602001\build\native\Taef.Native.props')" />
  <Import Project="packages\Taef.Native.10.55.200602001\build\native\Taef.Native.props" Condition="Exists('packages\Taef.Native.10.55.200602001\build\native\Taef.Native.props')" />
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|arm">
      <Configuration>Debug</Configuration>
      <Platform>arm</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|arm">
      <Configuration>Release</Configuration>
      <Platform>arm</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{8E58165B-CB6E-412B-A9C3-2AA89F0D473F}</ProjectGuid>
    <RootNamespace>ProjectReunionHelix</RootNamespace>
    <UseUnicrt>true</UseUnicrt>
    <UseStl>true</UseStl>
    <StlVersion>StlVerCurrent</StlVersion>
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset Condition="$(VisualStudioVersion) &gt;= 16.0">v142</PlatformToolset>
    <PlatformToolset Condition="$(VisualStudioVersion) &gt;= 15.0 and $(VisualStudioVersion) &lt; 16.0">v141</PlatformToolset>
    <PlatformToolset Condition="$(VisualStudioVersion) &lt; 15.0">v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <PropertyGroup Label="AvoidDefaultLibs">
    <NonCoreWin>true</NonCoreWin>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Debug'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Release'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)'=='Debug'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)'=='Release'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UseOneCoreLibs">
    <LibraryPath Condition="'$(Platform)'=='Win32'">$(VCInstallDir)lib\onecore;$(LibraryPath)</LibraryPath>
    <LibraryPath Condition="'$(Platform)'=='x64'">$(VCInstallDir)lib\onecore\amd64;$(LibraryPath)</LibraryPath>
    <LibraryPath Condition="'$(Platform)'=='ARM'">$(VCInstallDir)lib\onecore\arm;$(LibraryPath)</LibraryPath>
    <LibraryPath Condition="'$(Platform)'=='ARM64'">$(VCInstallDir)lib\onecore\arm64;$(LibraryPath)</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <LinkIncremental>true</LinkIncremental>
    <!-- Under Razzle Microsoft.Build.Cpp.props automatically sets LinkerDebugOptions to /debugtype which is incompatible with LinkIncremental so reset it back here. -->
    <LinkerDebugOptions>
    </LinkerDebugOptions>
  </PropertyGroup>
  <ItemDefinitionGroup Label="OneCoreCompileOptions">
    <ClCompile>
      <PrecompiledHeader>Create</PrecompiledHeader>
      <PreprocessorDefinitions>
        %(PreprocessorDefinitions)
        ;_WIN32_WINNT=_WIN32_WINNT_WIN10
      </PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <AdditionalDependencies>
        %(AdditionalDependencies)
        ;onecore.lib
      </AdditionalDependencies>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries);kernel32.lib;advapi32.lib</IgnoreSpecificDefaultLibraries>
      <MinimumRequiredVersion>10.0</MinimumRequiredVersion>
      <SubSystem>Console</SubSystem>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)'=='Debug'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <AdditionalIncludeDirectories>.;..\..\..\dev\PlatformIntegrationPackage\PIPMainPackage\Common;..\..\..\dev\PlatformIntegrationPackage\PIPMainPackage\DynDep</AdditionalIncludeDirectories>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">pch.h</PrecompiledHeaderFile>
      <LanguageStandard Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">stdcpp17</LanguageStandard>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|arm'">pch.h</PrecompiledHeaderFile>
      <LanguageStandard Condition="'$(Configuration)|$(Platform)'=='Debug|arm'">stdcpp17</LanguageStandard>
      <CompileAsWinRT Condition="'$(Configuration)|$(Platform)'=='Debug|arm'">false</CompileAsWinRT>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">pch.h</PrecompiledHeaderFile>
      <LanguageStandard Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries);libucrtd.lib</IgnoreSpecificDefaultLibraries>
      <AdditionalOptions>%(AdditionalOptions) /defaultlib:ucrtd.lib</AdditionalOptions>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)'=='Release'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <!-- We use MultiThreaded, rather than MultiThreadedDLL, to avoid DLL dependencies on VCRUNTIME140.dll and MSVCP140.dll. -->
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <!-- Link statically against the runtime and STL, but link dynamically against the CRT by ignoring the static CRT
           lib and instead linking against the Universal CRT DLL import library. This "hybrid" linking mechanism is
           supported according to the CRT maintainer. Dynamic linking against the CRT makes the binaries a bit smaller
           than they would otherwise be if the CRT, runtime, and STL were all statically linked in. -->
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries);libucrt.lib</IgnoreSpecificDefaultLibraries>
      <AdditionalOptions>%(AdditionalOptions) /defaultlib:ucrt.lib</AdditionalOptions>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="pch.cpp" />
    <ClCompile Include="PIPActivationTest.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="pch.h" />
    <ClInclude Include="PIPActivationTest.hpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <!--additional imports-->
  <ImportGroup Label="ExtensionTargets">
    <Import Project="..\..\..\packages\Microsoft.Windows.ImplementationLibrary.1.0.200519.2\build\native\Microsoft.Windows.ImplementationLibrary.targets" Condition="Exists('..\..\..\packages\Microsoft.Windows.ImplementationLibrary.1.0.200519.2\build\native\Microsoft.Windows.ImplementationLibrary.targets')" />
    <Import Project="..\..\..\packages\Taef.Native.10.55.200602001\build\native\Taef.Native.targets" Condition="Exists('..\..\..\packages\Taef.Native.10.55.200602001\build\native\Taef.Native.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\..\..\packages\Microsoft.Windows.ImplementationLibrary.1.0.200519.2\build\native\Microsoft.Windows.ImplementationLibrary.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\..\..\packages\Microsoft.Windows.ImplementationLibrary.1.0.200519.2\build\native\Microsoft.Windows.ImplementationLibrary.targets'))" />
    <Error Condition="!Exists('..\..\..\packages\Taef.Native.10.55.200602001\build\native\Taef.Native.props')" Text="$([System.String]::Format('$(ErrorText)', '..\..\..\packages\Taef.Native.10.55.200602001\build\native\Taef.Native.props'))" />
    <Error Condition="!Exists('..\..\..\packages\Taef.Native.10.55.200602001\build\native\Taef.Native.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\..\..\packages\Taef.Native.10.55.200602001\build\native\Taef.Native.targets'))" />
  </Target>
</Project>