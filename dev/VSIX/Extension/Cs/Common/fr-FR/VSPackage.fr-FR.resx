<?xml version="1.0" encoding="utf-8"?>
<!--
    VS SDK Notes: This resx file contains the resources that will be consumed from
    your package by Visual Studio. For example, Visual Studio will attempt to load
    resource '1000' from this resource stream when it needs to load one of your
    package's template's name. Because Visual Studio will always look in the
    VSPackage.resources stream first for resources it needs, you should put additional
    resources that Visual Studio will load directly into this resx file.

    By convention, strings that have both non-experimental and experimental versions
    have consecutive IDs (even = non-experimental, odd = experimental).

    Resources that you would like to access directly from your package in a strong-typed
    fashion should be stored in Resources.resx or another resx file.
-->
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="1001" xml:space="preserve">
    <value>Fenêtre vide (WinUI 3 dans le Bureau)</value>
  </data>
  <data name="1002" xml:space="preserve">
    <value>Fenêtre vierge (WinUI 3 dans le Bureau)</value>
  </data>
  <data name="1003" xml:space="preserve">
    <value>Fenêtre vide pour les applications de bureau basées sur la Bibliothèque d’interface utilisateur Windows (WinUI 3).</value>
  </data>
  <data name="1005" xml:space="preserve">
    <value>Page vierge (WinUI 3)</value>
  </data>
  <data name="1006" xml:space="preserve">
    <value>[Experimental] Page vierge (WinUI 3)</value>
  </data>
  <data name="1007" xml:space="preserve">
    <value>Page vide pour les applications basées sur la Bibliothèque d’interface utilisateur Windows (WinUI 3).</value>
  </data>
  <data name="1009" xml:space="preserve">
    <value>Dictionnaire de ressources (WinUI 3)</value>
  </data>
  <data name="1010" xml:space="preserve">
    <value>[Expérimental] Dictionnaire de ressources (WinUI 3)</value>
  </data>
  <data name="1011" xml:space="preserve">
    <value>Collection vide et à clé de ressources XAML pour les applications basées sur la Bibliothèque d’interface utilisateur Windows (WinUI 3).</value>
  </data>
  <data name="1013" xml:space="preserve">
    <value>Fichier de ressources (.resw)</value>
  </data>
  <data name="1014" xml:space="preserve">
    <value>[Experimental] Fichier de ressources (.resw)</value>
  </data>
  <data name="1015" xml:space="preserve">
    <value>Fichier de stockage de ressources conditionnelles et de chaîne pour les applications basées sur la Bibliothèque d’interface utilisateur Windows (WinUI 3).</value>
  </data>
  <data name="1017" xml:space="preserve">
    <value>Contrôle personnalisé (WinUI 3)</value>
  </data>
  <data name="1018" xml:space="preserve">
    <value>[Expérimental] Contrôle personnalisé (WinUI 3)</value>
  </data>
  <data name="1019" xml:space="preserve">
    <value>Contrôle personnalisé pour les applications basé sur la Bibliothèque d’interface utilisateur Windows (WinUI 3).</value>
  </data>
  <data name="1021" xml:space="preserve">
    <value>Contrôle utilisateur (WinUI 3)</value>
  </data>
  <data name="1022" xml:space="preserve">
    <value>[Expérimental] Contrôle utilisateur (WinUI 3)</value>
  </data>
  <data name="1023" xml:space="preserve">
    <value>Contrôle utilisateur pour les applications basé sur la Bibliothèque d’interface utilisateur Windows (WinUI 3).</value>
  </data>
  <data name="1025" xml:space="preserve">
    <value>Bibliothèque de classes (WinUI 3 dans desktop)</value>
  </data>
  <data name="1026" xml:space="preserve">
    <value>[Expérimental] Bibliothèque de classes (WinUI 3 dans UWP)</value>
  </data>
  <data name="1027" xml:space="preserve">
    <value>Projet de création d’une bibliothèque de classes managées (.dll) pour les applications de bureau basées sur la bibliothèque d’interface utilisateur Windows (WinUI 3).</value>
  </data>
  <data name="1031" xml:space="preserve">
    <value>Modèle de projet pour la création d’une application de bureau basée sur la bibliothèque d’interface utilisateur Windows (WinUI 3). Un projet d’empaquetage d’application Windows (WAP) est inclus pour créer un package MSIX pour le chargement indépendant ou la distribution via le Microsoft Store.</value>
  </data>
  <data name="1033" xml:space="preserve">
    <value>Application vide, empaquetée (WinUI 3 sur le Bureau)</value>
  </data>
  <data name="1034" xml:space="preserve">
    <value>[Expérimental] Application vide, empaquetée (WinUI 3 sur le Bureau)</value>
  </data>
  <data name="1035" xml:space="preserve">
    <value>Modèle de projet pour la création d’une application de bureau basée sur la Bibliothèque d’interface utilisateur Windows (WinUI 3) ainsi qu’un package MSIX pour le chargement indépendant ou la distribution via le Microsoft Store.</value>
  </data>
  <data name="1037" xml:space="preserve">
    <value>Application vide (WinUI 3 dans UWP)</value>
  </data>
  <data name="1038" xml:space="preserve">
    <value>[Expérimental] Application vide (WinUI 3 dans UWP)</value>
  </data>
  <data name="1039" xml:space="preserve">
    <value>Projet de création d’une application de plateforme Windows universelle (UWP) basée sur la bibliothèque d’interface utilisateur Windows (WinUI 3). Nécessite la prise en charge expérimentale de SDK d’application Windows.</value>
  </data>
  <data name="1041" xml:space="preserve">
    <value>Bibliothèque de classes (WinUI 3 dans UWP)</value>
  </data>
  <data name="1042" xml:space="preserve">
    <value>[Expérimental] Bibliothèque de classes (WinUI 3 dans UWP)</value>
  </data>
  <data name="1043" xml:space="preserve">
    <value>Projet de création d’un composant Windows Runtime managé (.dll) pour les applications de plateforme Windows universelle (UWP), basée sur la bibliothèque d’interface utilisateur Windows (WinUI 3). Nécessite la prise en charge expérimentale de SDK d’application Windows.</value>
  </data>
  <data name="1045" xml:space="preserve">
    <value>Composant Windows Runtime (WinUI 3 dans UWP)</value>
  </data>
  <data name="1046" xml:space="preserve">
    <value>[Expérimental] composant Windows Runtime (WinUI 3 dans UWP)</value>
  </data>
  <data name="1047" xml:space="preserve">
    <value>Projet de création d’un composant Windows Runtime managé (.winmd) pour les applications de plateforme Windows universelle (UWP), basé sur la bibliothèque d’interface utilisateur Windows (WinUI 3). Nécessite la prise en charge expérimentale du Kit de développement logiciel SDK d’application Windows.</value>
  </data>
</root>