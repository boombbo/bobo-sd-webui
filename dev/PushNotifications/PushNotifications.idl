// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

namespace Microsoft.Windows.PushNotifications
{
    enum PushNotificationChannelStatus
     {
        InProgress, // The request is in progress and there is no retry operation
        InProgressRetry, // The request is in progress and is in a backoff retry state. Check ExtendedError for HRESULT for retryable error.
        CompletedSuccess, // The request completed successfully
        CompletedFailure, // The request failed with some critical internal error. Check ExtendedError for HRESULT
     };

    // The PushNotificationChannel Progress result
    struct PushNotificationCreateChannelStatus
    {
        // The last extended error we failed Channel requests on that caused the inprogress retry status. S_OK if this is just progress status.
        HRESULT extendedError;

        // Either InProgress or InProgressRetry status
        PushNotificationChannelStatus status;

        // Total Retries so far
        UInt32 retryCount;
    };

    runtimeclass PushNotificationChannel
    {
        PushNotificationChannel(String uri, Windows.Foundation.DateTime expiration);

    // The Channel Uri for app to Post a notification to.
    String Uri { get; };

    // Expiration of the Channel
    Windows.Foundation.DateTime ExpirationTime { get; };

    // Unsubscribes the channel
    void Close();

    // In-memory Event handler for Push Notifications
//   event Windows.Foundation.TypedEventHandler<PushNotificationChannel, PushNotificationReceivedEventArgs> PushReceived;
    };

    runtimeclass PushNotificationCreateChannelResult
    {
        PushNotificationCreateChannelResult(
            PushNotificationChannel channel,
            HRESULT extendedError,
            PushNotificationChannelStatus status);

        // The Push channel associated with the Result. Null if InProgress or completion failed
        PushNotificationChannel Channel { get; };

        // More detailed error code in addition to the ChannelStatus state.
        HRESULT ExtendedError{ get; };

        // The Status of the ChannelComplete operation
        PushNotificationChannelStatus Status { get; };

        void PushNotificationCreateChannelUpdate(
            PushNotificationChannel channel,
            HRESULT extendedError,
            PushNotificationChannelStatus status);
    };

    static runtimeclass PushNotificationManager
    {
        // Request a Push Channel with an encoded RemoteId from WNS. RemoteId is an AAD identifier GUID
        static Windows.Foundation.IAsyncOperationWithProgress<PushNotificationCreateChannelResult, PushNotificationCreateChannelStatus> CreateChannelAsync(Guid remoteId);
    };
}
